// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider     = "postgresql"
//   url          = env("DB_URL")
//   relationMode = "prisma"
// }

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

generator erd {
  provider = "prisma-erd-generator"
}

enum AppointmentStatus {
  PENDING
  CANCELED
  DONE
}

model PetshopService {
  id          String  @id
  title       String
  description String? @db.Text
  value       Int
  duration    Int

  Appointment Appointment[]
}

model Customer {
  id    String @id
  name  String
  phone String
  pets  Pet[]
}

model Pet {
  id      String @id
  name    String
  age     Int
  breed   String
  ownerId String

  Appointment Appointment[]
  owner       Customer      @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  diseases    PetDisease[]

  @@index([ownerId])
}

model PetDisease {
  id          String   @id @default(uuid())
  name        String
  description String?  @db.Text
  severity    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  Pet         Pet?     @relation(fields: [petId], references: [id])
  petId       String?

  @@index([name])
}

model Appointment {
  id              String            @id
  petId           String
  serviceId       String?
  appointmentTime DateTime
  status          AppointmentStatus @default(PENDING)

  pet     Pet             @relation(fields: [petId], references: [id])
  service PetshopService? @relation(fields: [serviceId], references: [id], onDelete: SetNull)

  @@index([petId])
  @@index([serviceId])
}

model User {
  id           String  @id
  name         String
  email        String  @unique
  password     String
  refreshToken String?
  role         String  @default("USER")
}
